openapi: 3.0.3
info:
  title: PBA - OpenAPI 3.0
  description: Programowanie Bezpiecznych Aplikacji
  version: 1.0.0
servers:
  - url: https://pba.swagger.io/api/v3
tags:
  - name: user
    description: Operations related to users
paths:
  /users:
    get:
      tags:
        - user
      summary: Get all users
      description: This can only be done by the logged-in user. Log in using Basic auth.
      operationId: getUsers
      security:
        - basicAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged-in user. Log in using Basic auth.
      operationId: createUser
      security:
        - basicAuth: []
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /user/{pesel}:
    get:
      tags:
        - user
      summary: Get user by pesel.
      description: This can only be done by the logged-in user. Log in using Basic auth.
      operationId: getUserByPesel
      parameters:
        - name: pesel
          in: path
          description: 'The name that needs to be fetched. Use 11111111111 for testing.'
          required: true
          schema:
            type: string
      security:
        - basicAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged-in user. Log in using OAuth.
      operationId: updateUser
      parameters:
        - name: pesel
          in: path
          description: pesel that needs to be updated
          required: true
          schema:
            type: string
      security:
        - bearer: []
      requestBody:
        description: Update an existing user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged-in user. Log in using Basic auth.
      operationId: deleteUser
      parameters:
        - name: pesel
          in: path
          description: The pesel that needs to be deleted
          required: true
          schema:
            type: string
      security:
        - bearer: []
      responses:
        '400':
          description: Invalid pesel supplied
        '404':
          description: User not found
components:
  schemas:
    User:
      required:
        - firstName
        - lastName
        - pesel
      type: object
      properties:
        pesel:
          type: string
          example: 11111111111
        firstName:
          type: string
          example: Jane
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: jane.doe@email.com
        citizenship:
          type: string
          example: 'PL'
        age:
          type: integer
          format: int32
          example: 20
      xml:
        name: user
    UserResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'

      xml:
        name: '##default'
    UsersResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".